@charset "UTF-8";

//     The Inverted Triangle Architecture
//
//   ****************************************
//    *               Settings             *
//     ************************************
//      *              Tools             *
//       ********************************
//        *           Generic          *
//         ****************************
//          *          Base          *
//           ************************
//            *      Objects       *
//             ********************
//              *   Components   *
//               *              *
//                **************
//                 *  Trumps  *
//                  *        *
//                   *      *
//                    *    *
//                     *  *
//                      **
//
//
//  Level: Settings
//  This is the level with the most generic rules effecting the widest range. Basic (SASS) variables like colors, font stacks or types of margins are set in these files.
@import "_0_settings_colors";
@import "_0_settings_fonts";

//  Level: Tools
//  On this level, sass files contain mixins and functions like a rem-to-px converter, a breakpoint helper or any sort of things from a library (like compass).
@import "_1_tools_mixins";

//  Level: Generic
//  This level contains "ground-zero" styles, i.e. a reset stylesheet or normalize.css or wide range selectors like changing the box-sizing model for all elements. They have low specificity but are far reaching.
@import "_2_generic_normalize";
@import "_2_generic_boxsizing";

//  Level: Base
//  Default styles for unclassed HTML elements.
@import "_3_base_fonts";
@import "_3_base_layout";

//  Level: Objects
//  Cosmetic-free design patterns like a grid system or a the media object. Basically CSS that just sort structural things out without giving them any special look and feel. They only use classes (no IDs, no HTML elements) as selectors.
//  The class names should be chosen content agnostic (like: br-lists), so they are reusable.

//  Level: Components
//  These are fully designed chunks of the user interface. Styles here also use only class names, but are more explicitly named (like .products-list)
@import "_4_components_header";
@import "_4_components_menus";
@import "_4_components_sections";
@import "_4_components_maps";
@import "_4_components_units";


//  Level: Trumps (Wins)
//  Helper classes, overrides, utilities etc. that only affect one piece of the DOM at a time. May carry !important.
